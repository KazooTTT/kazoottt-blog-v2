---
import { type CollectionEntry, getCollection } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import Note from "@/components/note/Note.astro";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_NOTES_PER_PAGE = 10;
	const allNotes = await getCollection("note");
	const notesCount = allNotes.length;
	return paginate(allNotes.sort(collectionDateSort), {
		pageSize: MAX_NOTES_PER_PAGE,
		props: { notesCount },
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"note">>;
	uniqueTags: string[];
	notesCount: number;
}

const { page, notesCount } = Astro.props;

const meta = {
	description: "Read my collection of notes",
	title: "Notes",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Page",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Page →",
			url: page.url.next,
		},
	}),
};

function calculateIndex(index: number, page: Page<CollectionEntry<"note">>) {
	return index + page.start;
}
---

<PageLayout meta={meta}>
	<section>
		<h1 class="title mb-6 flex items-center gap-3">
			Notes({notesCount})
			<a class="text-accent" href="/notes/rss.xml" target="_blank">
				<span class="sr-only">RSS feed</span>
				<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="mdi:rss" />
			</a>
			<div class="flex-1"></div>
			<a
				href={`/notes/${page.currentPage === 1 ? "" : page.currentPage}`}
				class="cactus-link text-sm">preview</a
			>
		</h1>
		<div class="columns-1">
			{
				page.data.map((note, index) => (
					<Note
						note={note}
						as="h2"
						isPreview
						index={calculateIndex(index, page)}
						enableLineClamp={false}
					/>
				))
			}
		</div>
		<Pagination {...paginationProps} />
	</section>
</PageLayout>
