---
import type { CollectionEntry } from "astro:content";
import { getAllPosts, getUniqueCategories, getUniqueTags } from "@/data/post";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_POSTS_PER_PAGE = 10;
	const MAX_TAGS = 7;
	const MAX_CATEGORIES = 7;
	const allPosts = await getAllPosts();
	const uniqueTags = getUniqueTags(allPosts).slice(0, MAX_TAGS);
	const uniqueCategories = getUniqueCategories(allPosts).slice(0, MAX_CATEGORIES);
	const postsCount = allPosts.length;
	return paginate(allPosts.sort(collectionDateSort), {
		pageSize: MAX_POSTS_PER_PAGE,
		props: { uniqueTags, uniqueCategories, postsCount },
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"post">>;
	uniqueTags: string[];
	uniqueCategories: string[];
	postsCount: number;
}

const currentPath = Astro.url.pathname;
const newPath = currentPath.replace("/blog/", "/posts/");
return Astro.redirect(newPath);
---
